import { Imarker } from '../../interfacies/interface'
import { heightCar, heightPerson } from '../variables'

export function point(m: any, ymaps: any, type: string, coords: Array<number>): any{

  const car: string = 'car',
        i: string = 'i'

  function data(){
    let d:Imarker
    switch (type) {
      case car:
        d = {
          height: heightCar,
          color: '#3ee55a',
          get width(){
            return this.height * 0.65
          },
          icon: `<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x='60' y='-100'
                viewBox="0 0 43.723 43.723" style="enable-background:new 0 0 43.723 43.723;" xml:space="preserve" width="200px">
                <path style="fill:#030104;" d="M43.723,14.572h-6.166l-0.351,3.325c-0.129-0.078-0.261-0.153-0.397-0.222v-6.933
                c0-3.091-2.514-5.605-5.605-5.605H12.518c-3.092,0-5.605,2.514-5.605,5.605v6.933c-0.138,0.067-0.271,0.144-0.397,0.222
                l-0.351-3.325H0v3.177l6.199,0.354c-1.16,0.822-1.902,2.072-1.902,3.477v6.354c0,1.58,0.939,2.967,2.355,3.765v4.271
                c0,1.443,1.68,2.616,3.749,2.616s3.749-1.172,3.749-2.616v-3.55h14.78v3.55c0,1.443,1.678,2.616,3.748,2.616
                c2.071,0,3.748-1.172,3.748-2.616v-3.962c1.77-0.709,3-2.264,3-4.072v-6.354c0-1.404-0.744-2.654-1.903-3.477l6.2-0.354
                L43.723,14.572L43.723,14.572z M9.154,10.742c0-1.855,1.509-3.364,3.362-3.364h18.687c1.854,0,3.364,1.509,3.364,3.364v6.365
                c-0.096-0.005-0.188-0.013-0.283-0.013H9.438c-0.097,0-0.189,0.008-0.283,0.013L9.154,10.742L9.154,10.742z M28.027,25.317v1.494
                H16.442v-1.494H28.027z M8.033,27.446v-4.913h6.766v4.913H8.033z M15.694,31.11c-0.519,0-0.937-0.418-0.937-0.936
                c0-0.517,0.418-0.935,0.937-0.935c0.517,0,0.934,0.418,0.934,0.935S16.211,31.11,15.694,31.11z M28.961,31.11
                c-0.517,0-0.934-0.418-0.934-0.936c0-0.517,0.417-0.935,0.934-0.935s0.936,0.418,0.936,0.935
                C29.896,30.691,29.478,31.11,28.961,31.11z M36.623,27.446h-6.766v-4.913h6.766V27.446z" fill="black"/>
                </svg>`
        }
        return d
      case i:
        d = {
          height: heightPerson,
          color: 'yellow',
          get width(){
            return this.height * 0.65
          },
          icon: `<svg width='150px' x='60' y='-100' viewBox='0 0 350 350' style='enable-background:new 0 0 500 500'>
                <path d='M291.299,116.517h-3.501c10.635-12.36,17.102-28.378,17.102-45.915C304.899,31.666,273.219,0,234.305,0 c-38.93,0-70.584,31.666-70.584,70.602c0,17.537,6.477,33.555,17.093,45.915h-3.51c-19.645,0-35.626,15.997-35.626,35.645v117.105 c0,19.648,15.982,35.633,35.626,35.633h1.372v128.07c0,20.332,10.697,35.645,24.884,35.645h61.468 c14.208,0,24.908-15.312,24.908-35.645v-128.07h1.363c19.642,0,35.639-15.984,35.639-35.633V152.161 C326.932,132.514,310.94,116.517,291.299,116.517z' fill='black'/>
                </svg>`
        }
        return d
    }
  }

  const dM : any = data(),
        iconOffset: Array<number> = [-(dM.width/2), -dM.height],
        layoutI = ymaps.templateLayoutFactory.createClass(
                  `<svg width='${dM.width}px' height='${dM.height}' x='0' y='0' viewBox='0 0 325 500'>
                  <g transform='translate(0.000000,512.000000) scale(0.100000,-0.100000)'
                  fill='#000000'>
                  <path d="M1319 5100 c-320 -57 -621 -214 -853 -446 -129 -128 -220 -255 -300
                  -419 -119 -240 -166 -444 -166 -715 0 -271 47 -475 166 -715 81 -165 153 -265
                  331 -457 171 -185 221 -245 347 -412 445 -594 717 -1254 743 -1804 3 -73 8
                  -130 11 -127 2 2 8 64 13 137 33 510 234 1042 602 1592 148 222 306 417 553
                  686 179 194 297 397 368 631 91 302 89 659 -5 955 -179 568 -669 994 -1256
                  1094 -153 27 -404 26 -554 0z" fill='${dM.color}'/>
                  </g>
                  ${dM.icon}
                  </svg>`),
  
  point = new ymaps.Placemark(coords,{},{ 
    iconLayout: layoutI,
    iconOffset: iconOffset
  }) 
  m.geoObjects.add(point)
}